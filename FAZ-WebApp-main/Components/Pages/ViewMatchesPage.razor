@page "/viewMatches"
@using Data
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject MatchServices matchServices
@inject TeamServices teamServices 
@inject RefereeServices refereeServices

<h1>View Matches</h1>
<form>
    <div class="row">
        <div class="col-3">
            <label class="form-lable">MatchId</label>
            <input type="number" class="form-control" @bind="newMatch.MatchId">
        </div>

        <div class="col-3">
            <label class="form-label">Host Team</label>
            <select class="form-control" @bind="newMatch.HostTeamId">
                <option value="">Select Team</option>
                @foreach (var team in teams)
                {
                    <option value="@team.TeamId">@team.TeamName</option>
                }
            </select>
        </div>

        <div class="col-3">
            <label class="form-label">Guest Team</label>
            <select class="form-control" @bind="newMatch.GuestTeamId">
                <option value="">Select Team</option>
                @foreach (var team in teams)
                {
                    <option value="@team.TeamId">@team.TeamName</option>
                }
            </select>
        </div>

        <div class="col-3">
            <label class="form-lable">FinalResults</label>
            <input type="string" class="form-control" @bind="newMatch.FinalResult">
        </div>

        <div class="col-3">
            <label class="form-label">Main Ref</label>
            <select class="form-control" @bind="newMatch.RefereeId">
                <option value="">Select MainRef</option>
                @foreach(var referee in referees)
                {
                    <option value="@referee.RefereeId">@referee.RefereeName</option>
                }
            </select>
        </div>

        <div class="col-3">
            <label class="form-label">Assistant Ref 1</label>
            <select class="form-control" @bind="newMatch.RefereeId">
                <option value="">Select AssistantRef1</option>
                @foreach(var referee in referees)
                {
                    <option value="@referee.RefereeId">@referee.RefereeName</option>
                }
            </select>
        </div>

        <div class="col-3">
            <label class="form-label">Assistant Ref 2</label>
            <select class="form-control" @bind="newMatch.RefereeId">
                <option value="">Select AssistantRef2</option>
                @foreach(var referee in referees)
                {
                    <option value="@referee.RefereeId">@referee.RefereeName</option>
                }
            </select>
        </div>

        <div class="col-3">
            <label class="form-lable">Date Played</label>
            <input type="date" class="form-control" @bind="newMatch.DatePlayed">
        </div>
        <button type="button" class="btn btn-success col-12 my-3" @onclick="AddMatch">Update Matches</button>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>MatchId</th>
            <th>HostTeam</th>
            <th>GuestTeam</th>
            <th>FinalResults</th>
            <th>MainRef</th>
            <th>AssistantRef1</th>
            <th>AssistantRef2</th>
            <th>DatePlayed</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var match in matches){
            <tr>
                <td>@match.MatchId</td>
                 <td>@teams.FirstOrDefault(t => t.TeamId == match.HostTeamId)?.TeamName</td>
                 <td>@teams.FirstOrDefault(t => t.TeamId == match.GuestTeamId)?.TeamName</td>
                 <td>@match.FinalResult</td>
                 <td>@referees.FirstOrDefault(r => r.RefereeId == match.RefereeId)?.RefereeName</td>
                 <td>@referees.FirstOrDefault(r => r.RefereeId == match.RefereeId)?.RefereeName</td>
                 <td>@referees.FirstOrDefault(r => r.RefereeId == match.RefereeId)?.RefereeName</td>
                 <td>@match.DatePlayed</td>
            </tr>
        }
    </tbody>
</table>

@code{
    public List<Match> matches = new List<Match>();
    public Match newMatch = new Match();
    public List<Team> teams = new List<Team>();
    public List<Referee> referees = new List<Referee>();
    
    public async Task AddMatch(){
        // adding to the database
        await matchServices.Post(newMatch);
        matches = matchServices.Get();
        newMatch = new();
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync(){
        matches = matchServices.Get();
        teams = teamServices.Get();
        referees = refereeServices.Get();
    }
}