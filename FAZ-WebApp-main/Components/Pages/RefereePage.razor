@page "/referee"
@using Data
@inject RefereeServices refereeServices
@inject TeamServices teamServices
@rendermode @(new InteractiveServerRenderMode(prerender:false))
<h1>Referee View Page</h1>

@if (showErrorMessage)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<form>
    <div class="row">
        <div class="col-3">
            <label class="form-label">Referee Id</label>
            <input type="number" class="form-control" @bind=newReferee.RefereeId>
        </div>

        <div class="col-3">
            <label class="form-label">Referee Name</label>
            <input type="string" class="form-control" @bind=newReferee.RefereeName>
        </div>

        <div class="col-3">
            <label class="form-label">Date Of Birth</label>
            <input type="date" class="form-control" @bind=newReferee.DateOfBirth>
        </div>

        <div class="col-3">
            <label class="form-label">Years Of Experience</label>
            <input type="number" class="form-control" @bind=newReferee.YearsOfExperience>
        </div>
    </div>
   <button type="button" class="btn btn-success col-12 my-2" @onclick="SaveReferee">@(isEditing ? "Update Referee" : "Add Referee")</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>RefereeId</th>
            <th>RefereeName</th>
            <th>DateOfBirth</th>
            <th>YearsOfExperience</th> 
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var referee in referees){
        <tr>
            <td>@referee.RefereeId</td>
            <td>@referee.RefereeName</td>
            <td>@referee.DateOfBirth</td>
            <td>@referee.YearsOfExperience</td>
            <td>
                    <button class="btn btn-primary" @onclick="() => EditReferee(referee)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteReferee(referee.RefereeId)">Delete</button>                
            </td>
        </tr>
        }
    </tbody>
</table>
@code{
    
    public List<Referee> referees = new List<Referee>();
    public Referee newReferee = new Referee();
    private bool isEditing = false;
    private bool showErrorMessage = false;
    private string errorMessage = string.Empty;
     public async Task SaveReferee()
    {
            if (string.IsNullOrWhiteSpace(newReferee.RefereeName) || 
            newReferee.DateOfBirth == default || 
            newReferee.YearsOfExperience == default || 
            newReferee.RefereeId == 0)
        {
            errorMessage = "Please fill in all the details.";
            showErrorMessage = true;
            return;
        }
        
        if (isEditing)
        {
            await refereeServices.Update(newReferee); 
        }
        else
        {
            await refereeServices.Post(newReferee);
        }
        
        referees = refereeServices.Get();
        newReferee = new Referee();
        isEditing = false;
        showErrorMessage = false;  
        StateHasChanged();
    }

    public void EditReferee(Referee referee)
    {
        newReferee = new Referee
        {
            RefereeId = referee.RefereeId,
            RefereeName = referee.RefereeName,
            DateOfBirth = referee.DateOfBirth,
            YearsOfExperience = referee.YearsOfExperience
        };
        isEditing = true;
    }

    public async Task DeleteReferee (int refereeId)
    {
        await refereeServices.Delete(refereeId);
        referees = refereeServices.Get();
        StateHasChanged();
        
    }

    protected override async Task OnInitializedAsync()
    {
        referees = refereeServices.Get();
    }
}
