@page "/"
@using Data 
@inject TeamServices teamServices 
@inject MatchServices matchServices 
@inject PlayerServices playerServices 


<style>
    .page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .section-header {
        background-color: rgb(24, 75, 8);
        color: white;
        text-align: center;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .info-section {
        background-color: rgb(233, 97, 6);
        color: white;
        padding: 10px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .card-deck {
        display: flex;
        overflow-x: auto;
        gap: 20px;
        padding-bottom: 20px;
    }

    .card {
        background-color: #f8f9fa;
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out;
        min-width: 300px; 
    }

    .card:hover {
        transform: scale(1.02);
    }
</style>

<div class="page-container">
    <div class="section-header">
        <h1>Admin Dashboard</h1>
    </div>
    
      <h2>Match History</h2>
    <div class="card-deck">
        @foreach (var match in matches)
        {
            var homeTeam = teams.FirstOrDefault(t => t.TeamId == match.HostTeamId);
            var awayTeam = teams.FirstOrDefault(t => t.TeamId == match.GuestTeamId);

            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">@homeTeam?.TeamName vs @awayTeam?.TeamName</h5>
                    <p class="card-text">Date: @match.DatePlayed.ToShortDateString()</p>
                    <button class="btn btn-primary" @onclick="() => ShowMatchDetails(match)">View Details</button>
                </div>
            </div>
        }
    </div>

    <div class="card">
        <div class="card-body">
            @if (selectedMatch == null)
            {
                <p>Select a match to view details.</p>
            }
            else
            {
                var homeTeam = teams.FirstOrDefault(t => t.TeamId == selectedMatch.HostTeamId);
                var awayTeam = teams.FirstOrDefault(t => t.TeamId == selectedMatch.GuestTeamId);
                
                <h5>@homeTeam.TeamName vs @awayTeam.TeamName</h5>
                <p>Date: @selectedMatch.DatePlayed.ToShortDateString()</p>
                <p>Final Result: @selectedMatch.FinalResult</p>
                <p>@selectedMatch.News</p> 
            }
        </div>
    </div>
</div>

@code {
    List<Team> teams = new List<Team>();
    List<Match> matches = new List<Match>(); 
    Match selectedMatch;

    protected override async Task OnInitializedAsync()
    {
        teams = teamServices.Get();
        matches = matchServices.Get();
    }

    void ShowMatchDetails(Match match)
    {
        selectedMatch = match;
    }
}
